// Code generated by MockGen. DO NOT EDIT.
// Source: workshop2/utils (interfaces: ValidatorInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockValidatorInterface is a mock of ValidatorInterface interface.
type MockValidatorInterface struct {
	ctrl     *gomock.Controller
	recorder *MockValidatorInterfaceMockRecorder
}

// MockValidatorInterfaceMockRecorder is the mock recorder for MockValidatorInterface.
type MockValidatorInterfaceMockRecorder struct {
	mock *MockValidatorInterface
}

// NewMockValidatorInterface creates a new mock instance.
func NewMockValidatorInterface(ctrl *gomock.Controller) *MockValidatorInterface {
	mock := &MockValidatorInterface{ctrl: ctrl}
	mock.recorder = &MockValidatorInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockValidatorInterface) EXPECT() *MockValidatorInterfaceMockRecorder {
	return m.recorder
}

// Struct mocks base method.
func (m *MockValidatorInterface) Struct(arg0 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Struct", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Struct indicates an expected call of Struct.
func (mr *MockValidatorInterfaceMockRecorder) Struct(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Struct", reflect.TypeOf((*MockValidatorInterface)(nil).Struct), arg0)
}
